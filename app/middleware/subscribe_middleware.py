import os
from typing import Callable, Awaitable, Dict, Any
from aiogram import BaseMiddleware, Bot
from aiogram.types import Message, CallbackQuery
from app.keyboards import get_subs_keyboard

class CheckSubscribeMiddleware(BaseMiddleware):
    async def __call__(
        self,
        handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
        message: Message | CallbackQuery,
        data: Dict[str, Any],
    ):
        user = message.from_user
        group = os.getenv('GROUP')
        try:
            user_subscription_status = await message.bot.get_chat_member(
                chat_id=group,
                user_id=user.id
            )

            status = str(user_subscription_status).split()[0][8:-1]
            if status == 'left':
                await message.answer('üëã –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n'
                         '–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.', reply_markup=get_subs_keyboard()
                )
                return
            return await handler(message, data)
        except Exception as e:
            print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return
